<Window x:Class="RearrangingGridDemo.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:rearrangingGridDemo="clr-namespace:RearrangingGridDemo"
        xmlns:rearrangingGrid="clr-namespace:RearrangingGrid;assembly=RearrangingGrid"
        Title="Rearranging Grid Demo" Height="720" Width="625">

    <Window.DataContext>
        <rearrangingGridDemo:MainViewModel />
    </Window.DataContext>

    <Window.Resources>
        <Style TargetType="{x:Type xctk:IntegerUpDown}">
            <Setter Property="ParsingNumberStyle" Value="Integer"/>
            <Setter Property="Height" Value="19"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="IsEnabled" Value="True"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding LayoutMode, ElementName=ExtendedGrid}" Value="Narrow">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding LayoutMode, ElementName=ExtendedGrid}" Value="Short">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="TextAlignment" Value="Right"/>
        </Style>

        <Style TargetType="Border">
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
            <Setter Property="Background" Value="Blue"/>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="145"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <ScrollViewer  HorizontalScrollBarVisibility="Auto">
            <Grid  >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="110"/>
                    <ColumnDefinition Width="45"/>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="40"/>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="40"/>
                    <ColumnDefinition Width="80"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="20"/>
                    <RowDefinition Height="20"/>
                    <RowDefinition Height="20"/>
                    <RowDefinition Height="20"/>
                    <RowDefinition Height="20"/>
                    <RowDefinition Height="35"/>
                </Grid.RowDefinitions>

                <TextBlock Text="Current Mode:" VerticalAlignment="Bottom"  FontWeight="Bold" Grid.Row="0" Grid.Column="0"/>
                <TextBlock Text="{Binding LayoutMode, ElementName=ExtendedGrid}" VerticalAlignment="Bottom" Grid.Row="0" Grid.Column="1"  TextAlignment="Right" Foreground="Red" FontStyle="Italic" />

                <TextBlock Text="Actual Width:" Margin="5,0,0,0" FontWeight="Bold" Grid.Row="1" Grid.Column="0" VerticalAlignment="Bottom"/>
                <TextBlock Text="{Binding ActualWidth, ElementName=ExtendedGrid}" Grid.Row="1" Grid.Column="1" Margin="0,0,14,0" TextAlignment="Center" FontWeight="Normal" VerticalAlignment="Bottom"/>

                <TextBlock Text="Actual Height:" Margin="5,0,0,0" FontWeight="Bold" Grid.Row="3" Grid.Column="0" VerticalAlignment="Bottom"/>
                <TextBlock Text="{Binding ActualHeight, ElementName=ExtendedGrid}" Grid.Row="3" Grid.Column="1" Margin="0,0,14,0" TextAlignment="Center" FontWeight="Normal" VerticalAlignment="Bottom"/>

                <TextBlock Text="Width Threshold:" FontWeight="Bold" Grid.Row="2" Grid.Column="0"/>
                <xctk:IntegerUpDown  Grid.Row="2" Grid.Column="1" Value="{Binding NarrowThreshold, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                <TextBlock Text="Height Threshold:" FontWeight="Bold" Grid.Row="4" Grid.Column="0"/>
                <xctk:IntegerUpDown Grid.Row="4" Grid.Column="1" Value="{Binding ShortThreshold, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                <TextBlock Text="Visibility:" VerticalAlignment="Bottom" TextDecorations="Underline" Grid.Column="6" Grid.Row="0" HorizontalAlignment="Left" Margin="10,0,0,0"/>
                <Grid Grid.Row="1" Grid.RowSpan="4" Grid.Column="6" HorizontalAlignment="Left" Margin="10,0,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="14"/>
                        <RowDefinition Height="14"/>
                        <RowDefinition Height="14"/>
                        <RowDefinition Height="14"/>

                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="15"/>
                        <ColumnDefinition Width="15"/>
                        <ColumnDefinition Width="15"/>
                        <ColumnDefinition Width="15"/>
                    </Grid.ColumnDefinitions>

                    <CheckBox Grid.Row="0" Grid.Column="1" Name="TickA" IsChecked="True"/>
                    <CheckBox Grid.Row="0" Grid.Column="2" Name="TickB" IsChecked="True"/>
                    <CheckBox Grid.Row="0" Grid.Column="3" Name="TickC" IsChecked="True"/>

                    <CheckBox Grid.Row="1" Grid.Column="0" Name="TickD" IsChecked="True"/>
                    <CheckBox Grid.Row="2" Grid.Column="0" Name="TickE" IsChecked="True"/>
                    <CheckBox Grid.Row="3" Grid.Column="0" Name="TickF" IsChecked="True"/>

                    <Rectangle Fill="Blue" Grid.Column="1" Grid.Row="1"/>
                    <Rectangle Fill="Blue" Grid.Column="2" Grid.Row="1"/>
                    <Rectangle Fill="Blue" Grid.Column="3" Grid.Row="1"/>

                    <Rectangle Fill="Blue" Grid.Column="1" Grid.Row="2"/>
                    <Rectangle Fill="Blue" Grid.Column="2" Grid.Row="2"/>
                    <Rectangle Fill="Blue" Grid.Column="3" Grid.Row="2"/>

                    <Rectangle Fill="Blue" Grid.Column="1" Grid.Row="3"/>
                    <Rectangle Fill="Blue" Grid.Column="2" Grid.Row="3"/>
                    <Rectangle Fill="Blue" Grid.Column="3" Grid.Row="3"/>
                </Grid>

                <!--Narrow Mode-->
                <TextBlock Text="Narrow Mode" TextDecorations="Underline" Grid.Column="2" Grid.ColumnSpan="2" Grid.Row="0" VerticalAlignment="Bottom" HorizontalAlignment="Right"/>

                <TextBlock Text="Column:" Grid.Row="1" Grid.Column="2" />

                <xctk:IntegerUpDown Grid.Row="1" Grid.Column="3" Value="{Binding NarrowColumn, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                <TextBlock Text="ColumnSpan:" Grid.Row="2" Grid.Column="2"/>
                <xctk:IntegerUpDown Grid.Row="2" Grid.Column="3"  Value="{Binding NarrowColumnSpan, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                <TextBlock Text="Row:"  Grid.Row="3" Grid.Column="2" />
                <xctk:IntegerUpDown Grid.Row="3" Grid.Column="3" Value="{Binding NarrowRow, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                <TextBlock Text="RowSpan:" Grid.Row="4" Grid.Column="2" />
                <xctk:IntegerUpDown Grid.Row="4" Grid.Column="3" Value="{Binding NarrowRowSpan, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                <!--Short Mode-->
                <TextBlock Text="Short Mode" TextDecorations="Underline" Grid.Column="4" Grid.ColumnSpan="2" Grid.Row="0" VerticalAlignment="Bottom" HorizontalAlignment="Right"/>

                <TextBlock Text="Column:" Grid.Row="1" Grid.Column="4" />
                <xctk:IntegerUpDown  Grid.Row="1" Grid.Column="5"  Value="{Binding ShortColumn, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                <TextBlock Text="ColumnSpan:" Grid.Row="2" Grid.Column="4" />
                <xctk:IntegerUpDown  Grid.Row="2" Grid.Column="5" Value="{Binding ShortColumnSpan, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                <TextBlock Text="Row:" Grid.Row="3" Grid.Column="4" />
                <xctk:IntegerUpDown Grid.Row="3" Grid.Column="5" Value="{Binding ShortRow, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                <TextBlock Text="RowSpan:" Grid.Row="4" Grid.Column="4" />
                <xctk:IntegerUpDown Grid.Row="4" Grid.Column="5" Value="{Binding ShortRowSpan, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                <TextBlock Text="Note: can only edit values when Grid is in regular mode since the extended grid works by swapping regular grid values with the short or narrow grid values"
                           FontStyle="Italic" Foreground="Red" Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="7" TextWrapping="Wrap" FontWeight="Normal"
                           TextAlignment="Left"/>
            </Grid>
        </ScrollViewer>
        <rearrangingGrid:RearrangingGrid Grid.Column="0" Grid.Row="1" NarrowThreshold="{Binding NarrowThreshold}" ShortThreshold="{Binding ShortThreshold}" SwitchingToNarrow="ExtendedGrid_OnSwitchingToNarrow" x:Name="ExtendedGrid">
            <Grid.ColumnDefinitions>
                <rearrangingGrid:HidableColumnDefinition Visible="{Binding IsChecked, ElementName=TickA, Mode=OneWay}"/>
                <rearrangingGrid:HidableColumnDefinition Visible="{Binding IsChecked, ElementName=TickB, Mode=OneWay}"/>
                <rearrangingGrid:HidableColumnDefinition Visible="{Binding IsChecked, ElementName=TickC, Mode=OneWay}"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <rearrangingGrid:HidableRowDefinition Visible="{Binding IsChecked, ElementName=TickD, Mode=OneWay}" Height="*"/>
                <rearrangingGrid:HidableRowDefinition Visible="{Binding IsChecked, ElementName=TickE, Mode=OneWay}" Height="*"/>
                <rearrangingGrid:HidableRowDefinition Visible="{Binding IsChecked, ElementName=TickF, Mode=OneWay}" Height="*"/>
            </Grid.RowDefinitions>

            <Border Grid.Column="0" Grid.Row="0" />
            <Border Grid.Column="1" Grid.Row="0" />
            <Border Grid.Column="2" Grid.Row="0"/>
            <Border Grid.Column="0" Grid.Row="1" />
            <Border Grid.Column="1" Grid.Row="1" />
            <Border Grid.Column="2" Grid.Row="1" />
            <Border Grid.Column="0" Grid.Row="2" />
            <Border Grid.Column="1" Grid.Row="2" />
            <Border Grid.Column="2" Grid.Row="2" />

            <Button Grid.Column="0" Grid.Row="0" 
                    rearrangingGrid:RearrangingGrid.NarrowRow="{Binding NarrowRow, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                    rearrangingGrid:RearrangingGrid.NarrowColumn="{Binding NarrowColumn, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                    rearrangingGrid:RearrangingGrid.NarrowColumnSpan="{Binding NarrowColumnSpan, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                    rearrangingGrid:RearrangingGrid.NarrowRowSpan="{Binding NarrowRowSpan, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    rearrangingGrid:RearrangingGrid.ShortRow="{Binding ShortRow, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                    rearrangingGrid:RearrangingGrid.ShortColumn="{Binding ShortColumn, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                    rearrangingGrid:RearrangingGrid.ShortColumnSpan="{Binding ShortColumnSpan, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                    rearrangingGrid:RearrangingGrid.ShortRowSpan="{Binding ShortRowSpan, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <TextBlock Text="Use the above controls to control where I move when the grid is resized when you resize the window" TextWrapping="Wrap" FontWeight="Normal"/>
            </Button>
        </rearrangingGrid:RearrangingGrid>
    </Grid>
</Window>































